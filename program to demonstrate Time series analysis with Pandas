 7)Write a Python program to demonstrate Time series analysis with Pandas 
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Generate a sample time series data
dates = pd.date_range(start='2023-01-01', end='2023-12-31', freq='D')
values = np.random.randn(len(dates)).cumsum()
time_series = pd.Series(values, index=dates)

# Display the first few rows of the time series data
print("Original Time Series Data:")
print(time_series.head())

# Resampling the time series data to monthly frequency
monthly_resampled = time_series.resample('ME').mean()
print("\nMonthly Resampled Data:")
print(monthly_resampled.head())

# Plotting the original and resampled time series data
plt.figure(figsize=(12, 6))
plt.plot(time_series, label='Daily Data', alpha=0.7)
plt.plot(monthly_resampled, label='Monthly Resampled Data', marker='o')
plt.title('Time Series Analysis with Pandas')
plt.xlabel('Date')
plt.ylabel('Value')
plt.legend()
plt.grid(True)
plt.show()

# Rolling statistics (e.g., moving average)
rolling_window = time_series.rolling(window=30)
rolling_mean = rolling_window.mean()
rolling_std = rolling_window.std()

# Plotting rolling statistics
plt.figure(figsize=(12, 6))
plt.plot(time_series, label='Original Data', alpha=0.7)
plt.plot(rolling_mean, label='30-Day Rolling Mean', color='red')
plt.plot(rolling_std, label='30-Day Rolling Std', color='green')
plt.title('Rolling Statistics')
plt.xlabel('Date')
plt.ylabel('Value')
plt.legend()
plt.grid(True)
plt.show()
